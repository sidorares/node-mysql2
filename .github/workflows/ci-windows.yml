name: CI

on:
  pull_request:
  push:
    branches: [ main ]

  workflow_dispatch:

env:
  MYSQL_PORT: 3306
  MYSQL_USER: root
  MYSQL_DATABASE: test

jobs:
  tests-windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: [16.x]
        mysql-version: ["mysql:5.7"]
        use-compression: [0]
        use-tls: [0]
        
    name: Node.js ${{ matrix.node-version }} - DB ${{ matrix.mysql-version }} - SSL=${{matrix.mysql-version}} Compression=${{matrix.use-compression}}

    steps:
      - uses: actions/checkout@v2
      - name: Set up MySQL
        run: docker run -d -e MYSQL_ALLOW_EMPTY_PASSWORD=1 -e MYSQL_ROOT_PASSWORD=${{ env.MYSQL_PASSWORD }} -e MYSQL_DATABASE=${{ env.MYSQL_DATABASE }} -v $PWD/mysqldata:/var/lib/mysql/ -v $PWD/examples/custom-conf:/etc/mysql/conf.d -v $PWD/examples/ssl/certs:/certs -p ${{ env.MYSQL_PORT }}:3306 ${{ matrix.mysql-version }}
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-
          
      - name: Install npm dependencies
        run: npm install
      - name: Wait mysql server is ready
        run: node tools/wait-up.js
      - name: Run tests
        run: FILTER=${{matrix.filter}} npm test
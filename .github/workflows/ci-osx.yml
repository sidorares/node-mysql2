name: CI - OSX

on:
  pull_request:
  push:
    branches: [ main ]

  workflow_dispatch:

env:
  MYSQL_PORT: 3306
  MYSQL_USER: root
  MYSQL_DATABASE: test

jobs:
  tests-osx:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: [20.x]
        use-compression: [0, 1]
        use-tls: [0, 1]

    name: Node.js ${{ matrix.node-version }} - DB ${{ matrix.mysql-version }} - SSL=${{matrix.use-tls}} Compression=${{matrix.use-compression}}

    steps:
      - uses: actions/checkout@v3

      - name: Install MySQL
        run: |
          brew install mysql@8.0
          brew link mysql@8.0 --force

      - name: Start MySQL Service
        run: brew services start mysql@8.0

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-

      - name: Install npm dependencies
        run: npm ci

      - name: Wait mysql server is ready
        run: node tools/wait-up.js

      - name: Configure MySQL
        run: |
          mysql -u root -e "CREATE DATABASE IF NOT EXISTS ${MYSQL_DATABASE};"

      - name: Run tests
        run: FILTER=${{matrix.filter}} MYSQL_USE_TLS=${{ matrix.use-tls }} MYSQL_USE_COMPRESSION=${{ matrix.use-compression }} npm run coverage-test

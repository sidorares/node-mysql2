name: CI - MySQL

on:
  pull_request:
  push:
    branches: [main]
  workflow_dispatch:

env:
  MYSQL_PORT: 3306
  MYSQL_USER: root
  MYSQL_DATABASE: test

jobs:
  tests-linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: [22]
        mysql-version:
          [
            # 'mysql:5.7', # Already tested in "ci-coverage"
            # 'mysql:8.0', # Already tested in "ci-coverage"
            'mysql:8.1',
            'mysql:8.2',
            # 'mysql:8.3', # Already tested in "ci-linux"
            # 'mysql:8.4', # TODO: Tests never end
            # 'mysql:9.0', # Already tested in "ci-coverage"
            'mysql:9.1',
            'mysql:9.2',
          ]
        use-compression: [0, 1]
        use-tls: [0, 1]
        mysql_connection_url_key: ['']
        include:
          ## MySQL 5.1: A number of tests does not work due to old sql syntax, just testing basic connection
          - filter: 'test-select-1'
            mysql-version: 'datagrip/mysql:5.1'
            use-compression: 0
            use-tls: 0

    env:
      MYSQL_CONNECTION_URL: ${{ secrets[matrix.mysql_connection_url_key] }}

    name: ${{ matrix.mysql-version }}${{ matrix.mysql_connection_url_key }} - SSL=${{matrix.use-tls}} Compression=${{matrix.use-compression}}

    steps:
      - uses: actions/checkout@v4

      - name: Set up MySQL
        if: ${{ matrix.mysql-version }}
        run: docker run -d -e MYSQL_ALLOW_EMPTY_PASSWORD=1 -e MYSQL_DATABASE=${{ env.MYSQL_DATABASE }} -v $PWD/mysqldata:/var/lib/mysql/ -v $PWD/test/fixtures/custom-conf:/etc/mysql/conf.d -v $PWD/test/fixtures/ssl/certs:/certs -p ${{ env.MYSQL_PORT }}:3306 ${{ matrix.mysql-version }}

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-linux-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-linux-

      - name: Install npm dependencies
        run: npm ci

      - name: Wait mysql server is ready
        if: ${{ matrix.mysql-version }}
        run: node tools/wait-up.js

      - name: Run tests
        run: FILTER=${{matrix.filter}} npm run test

sudo: required
dist: trusty

services:
  - docker

language: node_js
matrix:
  include:
    - node_js: "8"
      env: LINT=1 DOCKER_MYSQL_VERSION=5.7
    - node_js: "10"
      env: LINT=1 DOCKER_MYSQL_VERSION=5.7
    - node_js: "11"
      env: LINT=0 DOCKER_MYSQL_VERSION=5.7
    - node_js: "12"
      env: MYSQL_USE_COMPRESSION=1 LINT=0 DOCKER_MYSQL_VERSION=5.7
    - node_js: "12"
      env: LINT=0 DOCKER_MYSQL_VERSION=8.0.18
    - node_js: "12"
      env: LINT=0 DOCKER_MYSQL_VERSION=8.0.17
    - node_js: "12"
      env: MYSQL_USE_COMPRESSION=1 LINT=0 DOCKER_MYSQL_VERSION=8.0.17
    - node_js: "12"
      env: MYSQL_USE_TLS=1 LINT=0 DOCKER_MYSQL_VERSION=8.0.17
    - node_js: "12"
      env: MYSQL_USE_TLS=1 MYSQL_USE_COMPRESSION=1 LINT=0 DOCKER_MYSQL_VERSION=8.0.17

cache:
  yarn: true
  directories:
    - node_modules
    - $HOME/.yarn-cache

notifications:
  email: false

script:
  - docker run -d -e MYSQL_ALLOW_EMPTY_PASSWORD=1 -e MYSQL_DATABASE=test -v $PWD/mysqldata:/var/lib/mysql/ -v $PWD/examples/custom-conf:/etc/mysql/conf.d -v $PWD/examples/ssl/certs:/certs -p 33306:3306 mysql:$DOCKER_MYSQL_VERSION
  - MYSQL_PORT=33306 node tools/wait-up.js
  - yarn --version
  - if [ "$LINT" = "1" ]; then yarn run lint; fi
  - MYSQL_PORT=33306 yarn run test:raw
